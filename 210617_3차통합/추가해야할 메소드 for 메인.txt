
//MemberDao.java
	// 채용 공고에 대한 회사 리스트 조회
	public List<Member> selectCompany(List<RecruitDto> rclist1) throws SQLException {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		ArrayList<Member> listCompany = new ArrayList<Member>();
		ArrayList<Member> listCompanyTemp = new ArrayList<Member>();

		String sql = "SELECT * FROM member WHERE m_tf=0";
		try {
			conn = getConnection();
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				Member member = new Member();
				member.setM_id(rs.getString(1));
				member.setM_pass(rs.getString(2));
				member.setM_birth(rs.getString(3));
				member.setM_name(rs.getString(4));
				member.setM_addr(rs.getString(5));
				member.setM_gender(rs.getString(6));
				member.setM_email(rs.getString(7));
				member.setM_phone(rs.getString(8));
				member.setM_tf(rs.getString(9));
				listCompanyTemp.add(member);
			}
			
			for (RecruitDto recruit : rclist1) {
				Member company = new Member();
				for (Member member : listCompanyTemp) {
					if (recruit.getRc_name().equals(member.getM_id())) {
						company.setM_id(member.getM_id());
						company.setM_pass(member.getM_pass());
						company.setM_birth(member.getM_birth());
						company.setM_name(member.getM_name());
						company.setM_addr(member.getM_addr());
						company.setM_gender(member.getM_gender());
						company.setM_email(member.getM_email());
						company.setM_phone(member.getM_phone());
						company.setM_tf(member.getM_tf());
					}
				}
				listCompany.add(company);
			}
			
		} catch (Exception e) {
			System.out.println(e.getMessage());
			e.printStackTrace();
		} finally {
			if (rs != null)
				rs.close();
			if (pstmt != null)
				pstmt.close();
			if (conn != null)
				conn.close();
		}
		return listCompany;
	}